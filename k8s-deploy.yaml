apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: v1
kind: Secret
metadata:
  name: appinsights-conn
  namespace: demo
type: Opaque
stringData:
  APPLICATIONINSIGHTS_CONNECTION_STRING: ""  # <- patch this after apply
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-aks-app
  namespace: demo
spec:
  replicas: 2
  selector:
    matchLabels:
      app: node-aks-app
  template:
    metadata:
      labels:
        app: node-aks-app
    spec:
      imagePullSecrets:
        - name: acr-pull
      tolerations:
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      containers:
        - name: web
          image: aksdemoacr4895.azurecr.io/node-aks-app:1.0.4  # <- change tag as needed
          ports:
            - containerPort: 3000
          env:
            - name: APPLICATIONINSIGHTS_CONNECTION_STRING
              valueFrom:
                secretKeyRef:
                  name: appinsights-conn
                  key: APPLICATIONINSIGHTS_CONNECTION_STRING
          readinessProbe:
            httpGet:
              path: /readyz
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /healthz
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: "50m"
              memory: "128Mi"
            limits:
              cpu: "250m"
              memory: "256Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: node-aks-svc
  namespace: demo
spec:
  selector:
    app: node-aks-app
  ports:
    - port: 80
      targetPort: 3000
  type: LoadBalancer
